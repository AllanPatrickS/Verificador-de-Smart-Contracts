type = program, children = [declist, funclist]
type = declist, children = [declist, declaration]
type = declist, children = [declaration]
type = declaration, children = [type, identlist, ';']
type = type, children = ['int']
type = identlist, children = [identlist, ',', identifier]
type = identlist, children = [identifier]
type = identifier, children = ['a']
type = identifier, children = ['b']
type = declaration, children = [type, identlist, ';']
type = type, children = ['float']
type = identlist, children = [identlist, ',', identifier]
type = identlist, children = [identifier]
type = identifier, children = ['c']
type = identifier, children = ['d']
type = funclist, children = [function]
type = function, children = [type, 'main', '(', paramlist, ')', compoundstmt]
type = type, children = ['int']
type = paramlist, children = [paramlist, ',', parameter]
type = paramlist, children = [parameter]
type = parameter, children = [type, identifier]
type = type, children = ['int']
type = identifier, children = ['argc']
type = parameter, children = [type, identifier]
type = type, children = ['int']
type = identifier, children = ['argv']
type = compoundstmt, children = ['{', stmtlist, '}']
type = stmtlist, children = [stmtlist, stmt]
type = stmtlist, children = [stmtlist, stmt]
type = stmtlist, children = [stmtlist, stmt]
type = stmtlist, children = [stmtlist, stmt]
type = stmtlist, children = [stmtlist, stmt]
type = stmtlist, children = [stmtlist, stmt]
type = stmtlist, children = [stmt]
type = stmt, children = [assignstmt]
type = assignstmt, children = [assign, ';']
type = assign, children = ['a', '=', expr]
type = expr, children = [75]
type = stmt, children = [assignstmt]
type = assignstmt, children = [assign, ';']
type = assign, children = ['b', '=', expr]
type = expr, children = [97]
type = stmt, children = [assignstmt]
type = assignstmt, children = [assign, ';']
type = assign, children = ['c', '=', expr]
type = expr, children = [51]
type = stmt, children = [while]
type = while, children = ['while', '(', expr, ')', stmt]
type = expr, children = [expr, '<', expr]
type = expr, children = [id]
type = id, children = ['i']
type = expr, children = [10]
type = stmt, children = [compoundstmt]
type = compoundstmt, children = ['{', stmtlist, '}']
type = stmtlist, children = [stmtlist, stmt]
type = stmtlist, children = [stmt]
type = stmt, children = [assignstmt]
type = assignstmt, children = [assign, ';']
type = assign, children = ['i', '=', expr]
type = expr, children = [expr, '+', expr]
type = expr, children = [id]
type = id, children = ['i']
type = expr, children = [1]
type = stmt, children = [assignstmt]
type = assignstmt, children = [assign, ';']
type = assign, children = ['i', '=', expr]
type = expr, children = [2]
type = stmt, children = [assignstmt]
type = assignstmt, children = [assign, ';']
type = assign, children = ['d', '=', expr]
type = expr, children = [12]
type = stmt, children = [assignstmt]
type = assignstmt, children = [assign, ';']
type = assign, children = ['a', '=', expr]
type = expr, children = [expr, '-', expr]
type = expr, children = [expr, '+', expr]
type = expr, children = [id]
type = id, children = ['b']
type = expr, children = [id]
type = id, children = ['c']
type = expr, children = [id]
type = id, children = ['d']
type = stmt, children = [retstmt]
type = retstmt, children = ['return', expr, ';']
type = expr, children = [id]
type = id, children = ['a']
